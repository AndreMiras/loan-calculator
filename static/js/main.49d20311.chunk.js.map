{"version":3,"sources":["components/Header.tsx","components/LoanChart.tsx","components/LoanForm.tsx","components/LoanResult.tsx","utils/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Navbar","bg","variant","expand","className","Container","Brand","href","process","Toggle","Collapse","Nav","Link","getLabels","amount","totalInterest","total","principalRatio","toFixed","interestRatio","getChartParameters","labels","datasets","label","data","backgroundColor","LoanChart","Card","Body","type","CustomFormGroup","controlId","placeholder","text","onChange","Form","Group","Label","Col","sm","Control","e","Number","target","value","eventTargetValueNumber","xs","Text","AmountField","TermField","InterestRateField","LoanForm","onAmount","onTerm","onInterest","LoanResult","monthlyPayment","Title","Row","computeLoanParameters","term","interest","Math","pow","computeMonthlyPayment","App","useState","setAmount","setTerm","setInterest","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAoBeA,EAjBA,kBACb,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,UAAU,OAAvD,SACE,eAACC,EAAA,EAAD,WACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAMC,mBAApB,6BACA,cAACR,EAAA,EAAOS,OAAR,IACA,cAACT,EAAA,EAAOU,SAAR,UACE,eAACC,EAAA,EAAD,CAAKP,UAAU,UAAf,UACE,cAACO,EAAA,EAAIC,KAAL,CAAUL,KAAMC,mBAAhB,kBACA,cAACG,EAAA,EAAIC,KAAL,CAAUL,KAAK,iDAAf,8B,iBCPJM,EAAY,SAChBC,EACAC,EACAC,GAEA,IAAMC,GAAmB,IAAMH,EAAUE,GAAOE,QAAQ,GAClDC,GAAkB,IAAMJ,EAAiBC,GAAOE,QAAQ,GAC9D,MAAO,CAAC,cAAD,OAAeD,EAAf,0BAAgDE,EAAhD,QAGHC,EAAqB,SACzBN,EACAC,EACAC,GAHyB,MAIrB,CACJK,OAAQR,EAAUC,EAAQC,EAAeC,GACzCM,SAAU,CACR,CACEC,MAAO,oBACPC,KAAM,CAACV,EAAQC,GACfU,gBAAiB,CAAC,0BAA2B,+BA2BpCC,EAhBsC,SAAC,GAAD,IACnDZ,EADmD,EACnDA,OACAC,EAFmD,EAEnDA,cACAC,EAHmD,EAGnDA,MAHmD,OAKnD,eAACW,EAAA,EAAD,CAAMvB,UAAU,OAAhB,UACE,cAACuB,EAAA,EAAK5B,OAAN,gCACA,cAAC4B,EAAA,EAAKC,KAAN,UACE,cAAC,IAAD,CACEJ,KAAMJ,EAAmBN,EAAQC,EAAeC,GAChDa,KAAK,mB,SC5BPC,EAA2D,SAAC,GAAD,IAC/DC,EAD+D,EAC/DA,UACAR,EAF+D,EAE/DA,MACAS,EAH+D,EAG/DA,YACAC,EAJ+D,EAI/DA,KACAC,EAL+D,EAK/DA,SAL+D,OAO/D,eAACC,EAAA,EAAKC,MAAN,CAAYhC,UAAU,MAAM2B,UAAWA,EAAvC,UACE,cAACI,EAAA,EAAKE,MAAN,CAAYjC,UAAU,0BAAtB,SAAiDmB,IACjD,cAACe,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACJ,EAAA,EAAKK,QAAN,CACEX,KAAK,SACLG,YAAaA,EACbE,SAAU,SAACO,GAAD,OAAOP,EAzBM,SAC7BO,GAD6B,OAE1BC,OAAOD,EAAEE,OAAOC,OAuBaC,CAAuBJ,SAGrD,cAACH,EAAA,EAAD,CAAKQ,GAAI,GAAT,SACE,cAACX,EAAA,EAAKY,KAAN,CAAW3C,UAAU,aAArB,SAAmC6B,UASnCe,EAA6C,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAH,OACjD,cAAC,EAAD,CACEH,UAAU,cACVR,MAAM,cACNS,YAAY,SACZC,KAAK,uBACLC,SAAUA,KAIRe,EAA2C,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAH,OAC/C,cAAC,EAAD,CACEH,UAAU,YACVR,MAAM,YACNS,YAAY,KACZC,KAAK,sCACLC,SAAUA,KAIRgB,EAAmD,SAAC,GAAD,IAAGhB,EAAH,EAAGA,SAAH,OACvD,cAAC,EAAD,CACEH,UAAU,qBACVR,MAAM,gBACNS,YAAY,MACZC,KAAK,gCACLC,SAAUA,KA0BCiB,EAjBoC,SAAC,GAAD,IACjDC,EADiD,EACjDA,SACAC,EAFiD,EAEjDA,OACAC,EAHiD,EAGjDA,WAHiD,OAKjD,eAAC3B,EAAA,EAAD,CAAMvB,UAAU,OAAhB,UACE,cAACuB,EAAA,EAAK5B,OAAN,wBACA,cAAC4B,EAAA,EAAKC,KAAN,UACE,eAACO,EAAA,EAAD,WACE,cAAC,EAAD,CAAaD,SAAUkB,IACvB,cAAC,EAAD,CAAWlB,SAAUmB,IACrB,cAAC,EAAD,CAAmBnB,SAAUoB,aC9CtBC,EAjCwC,SAAC,GAAD,IACrDC,EADqD,EACrDA,eACA1C,EAFqD,EAErDA,OACAC,EAHqD,EAGrDA,cACAC,EAJqD,EAIrDA,MAJqD,OAMrD,eAACW,EAAA,EAAD,CAAMvB,UAAU,OAAhB,UACE,cAACuB,EAAA,EAAK5B,OAAN,0BACA,eAAC4B,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAK8B,MAAN,CAAYrD,UAAU,cAAtB,6BACA,oBAAIA,UAAU,cAAd,SAA6BoD,EAAetC,QAAQ,KACpD,uBACA,eAACwC,EAAA,EAAD,WACE,cAACpB,EAAA,EAAD,CAAKQ,GAAI,EAAT,6BACA,cAACR,EAAA,EAAD,CAAKQ,GAAI,EAAG1C,UAAU,aAAtB,SACGU,EAAOI,QAAQ,KAElB,cAACoB,EAAA,EAAD,CAAKQ,GAAI,EAAT,4BACA,cAACR,EAAA,EAAD,CAAKQ,GAAI,EAAG1C,UAAU,aAAtB,SACGW,EAAcG,QAAQ,KAEzB,cAACoB,EAAA,EAAD,CAAKQ,GAAI,GAAT,SACE,yBAEF,cAACR,EAAA,EAAD,CAAKQ,GAAI,EAAT,yBACA,cAACR,EAAA,EAAD,CAAKQ,GAAI,EAAG1C,UAAU,aAAtB,SACGY,EAAME,QAAQ,eCtBnByC,EAAwB,SAC5B7C,EACA8C,EACAC,GAEA,IAAML,EAhBsB,SAC5B1C,EACA8C,EACAC,GAGA,OACG/C,GAFH+C,GAAY,KAEY,IAAM,EAAI,EAAIC,KAAKC,IAAI,EAAIF,EAAW,GAAW,GAAPD,IAS3CI,CAAsBlD,EAAQ8C,EAAMC,GACrD7C,EAAQwC,EAAiBI,EAAO,GAEtC,MAAO,CACLJ,eAAgBA,EAChBzC,cAHoBC,EAAQF,EAI5BE,MAAOA,IC0BIiD,EA1CH,WAAoB,IAAD,EACDC,mBAAS,GADR,mBACtBpD,EADsB,KACdqD,EADc,OAELD,mBAAS,GAFJ,mBAEtBN,EAFsB,KAEhBQ,EAFgB,OAGGF,mBAAS,GAHZ,mBAGtBL,EAHsB,KAGZQ,EAHY,OAIoBV,EAC/C7C,EACA8C,EACAC,GAHML,EAJqB,EAIrBA,eAAgBzC,EAJK,EAILA,cAAeC,EAJV,EAIUA,MAKvC,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,eAACsD,EAAA,EAAD,WACE,cAACpB,EAAA,EAAD,CAAKC,GAAI,GAAI+B,GAAI,EAAjB,SACE,cAAC,EAAD,CACElB,SAAUe,EACVd,OAAQe,EACRd,WAAYe,MAGhB,cAAC/B,EAAA,EAAD,UACE,cAAC,EAAD,CACEkB,eAAgBA,EAChB1C,OAAQA,EACRC,cAAeA,EACfC,MAAOA,MAGX,cAACsB,EAAA,EAAD,UACE,cAAC,EAAD,CACExB,OAAQA,EACRC,cAAeA,EACfC,MAAOA,eC5BNuD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.49d20311.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\n\nconst Header = (): JSX.Element => (\n  <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\" className=\"mb-4\">\n    <Container>\n      <Navbar.Brand href={process.env.PUBLIC_URL}>Loan Calculator</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href={process.env.PUBLIC_URL}>Home</Nav.Link>\n          <Nav.Link href=\"https://gitlab.com/andre.miras/loan-calculator\">\n            About\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n);\n\nexport default Header;\n","import React, { FunctionComponent } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Card } from \"react-bootstrap\";\n\nconst getLabels = (\n  amount: number,\n  totalInterest: number,\n  total: number\n): [string, string] => {\n  const principalRatio = ((100 * amount) / total).toFixed(2);\n  const interestRatio = ((100 * totalInterest) / total).toFixed(2);\n  return [`Principal (${principalRatio}%)`, `Interest (${interestRatio}%)`];\n};\n\nconst getChartParameters = (\n  amount: number,\n  totalInterest: number,\n  total: number\n) => ({\n  labels: getLabels(amount, totalInterest, total),\n  datasets: [\n    {\n      label: \"Loan distribution\",\n      data: [amount, totalInterest],\n      backgroundColor: [\"rgba(54, 162, 235, 0.2)\", \"rgba(255, 99, 132, 0.2)\"],\n    },\n  ],\n});\n\ntype LoanChartProps = {\n  amount: number;\n  totalInterest: number;\n  total: number;\n};\n\nconst LoanChart: FunctionComponent<LoanChartProps> = ({\n  amount,\n  totalInterest,\n  total,\n}) => (\n  <Card className=\"mt-4\">\n    <Card.Header>Loan Distribution</Card.Header>\n    <Card.Body>\n      <Doughnut\n        data={getChartParameters(amount, totalInterest, total)}\n        type=\"doughnut\"\n      />\n    </Card.Body>\n  </Card>\n);\n\nexport default LoanChart;\n","import React, { FunctionComponent, ChangeEvent } from \"react\";\nimport { Col, Card, Form } from \"react-bootstrap\";\n\ntype onNumberChangeCallback = (value: number) => void;\n\nconst eventTargetValueNumber = (\n  e: ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>\n) => Number(e.target.value);\n\ntype CustomFormGroupProps = {\n  controlId: string;\n  label: string;\n  placeholder: string;\n  text: string;\n  onChange: onNumberChangeCallback;\n};\n\nconst CustomFormGroup: FunctionComponent<CustomFormGroupProps> = ({\n  controlId,\n  label,\n  placeholder,\n  text,\n  onChange,\n}) => (\n  <Form.Group className=\"row\" controlId={controlId}>\n    <Form.Label className=\"col-sm-7 col-form-label\">{label}</Form.Label>\n    <Col sm={5}>\n      <Form.Control\n        type=\"number\"\n        placeholder={placeholder}\n        onChange={(e) => onChange(eventTargetValueNumber(e))}\n      />\n    </Col>\n    <Col xs={12}>\n      <Form.Text className=\"text-muted\">{text}</Form.Text>\n    </Col>\n  </Form.Group>\n);\n\ntype FieldProps = {\n  onChange: onNumberChangeCallback;\n};\n\nconst AmountField: FunctionComponent<FieldProps> = ({ onChange }) => (\n  <CustomFormGroup\n    controlId=\"loan-amount\"\n    label=\"Loan Amount\"\n    placeholder=\"200000\"\n    text=\"The amount to borrow\"\n    onChange={onChange}\n  />\n);\n\nconst TermField: FunctionComponent<FieldProps> = ({ onChange }) => (\n  <CustomFormGroup\n    controlId=\"loan-term\"\n    label=\"Loan Term\"\n    placeholder=\"20\"\n    text=\"The loan repayment period in years.\"\n    onChange={onChange}\n  />\n);\n\nconst InterestRateField: FunctionComponent<FieldProps> = ({ onChange }) => (\n  <CustomFormGroup\n    controlId=\"loan-interest-rate\"\n    label=\"Interest Rate\"\n    placeholder=\"1.9\"\n    text=\"The percentage interest rate.\"\n    onChange={onChange}\n  />\n);\n\ntype LoanFormProps = {\n  onAmount: onNumberChangeCallback;\n  onTerm: onNumberChangeCallback;\n  onInterest: onNumberChangeCallback;\n};\nconst LoanForm: FunctionComponent<LoanFormProps> = ({\n  onAmount,\n  onTerm,\n  onInterest,\n}) => (\n  <Card className=\"mt-4\">\n    <Card.Header>Loan Form</Card.Header>\n    <Card.Body>\n      <Form>\n        <AmountField onChange={onAmount} />\n        <TermField onChange={onTerm} />\n        <InterestRateField onChange={onInterest} />\n      </Form>\n    </Card.Body>\n  </Card>\n);\n\nexport default LoanForm;\n","import React, { FunctionComponent } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\n\ntype LoanResultProps = {\n  monthlyPayment: number;\n  amount: number;\n  totalInterest: number;\n  total: number;\n};\n\nconst LoanResult: FunctionComponent<LoanResultProps> = ({\n  monthlyPayment,\n  amount,\n  totalInterest,\n  total,\n}) => (\n  <Card className=\"mt-4\">\n    <Card.Header>Loan Result</Card.Header>\n    <Card.Body>\n      <Card.Title className=\"text-center\">Monthly Payment</Card.Title>\n      <h3 className=\"text-center\">{monthlyPayment.toFixed(2)}</h3>\n      <hr />\n      <Row>\n        <Col xs={6}>Principal paid:</Col>\n        <Col xs={6} className=\"text-right\">\n          {amount.toFixed(2)}\n        </Col>\n        <Col xs={6}>Interest paid:</Col>\n        <Col xs={6} className=\"text-right\">\n          {totalInterest.toFixed(2)}\n        </Col>\n        <Col xs={12}>\n          <hr />\n        </Col>\n        <Col xs={6}>Total paid:</Col>\n        <Col xs={6} className=\"text-right\">\n          {total.toFixed(2)}\n        </Col>\n      </Row>\n    </Card.Body>\n  </Card>\n);\n\nexport default LoanResult;\n","/**\n * https://fr.wikipedia.org/wiki/Mensualit%C3%A9#Calcul_formel\n */\nconst computeMonthlyPayment = (\n  amount: number,\n  term: number,\n  interest: number\n): number => {\n  interest /= 100;\n  return (\n    (amount * interest) / 12 / (1 - 1 / Math.pow(1 + interest / 12, term * 12))\n  );\n};\n\nconst computeLoanParameters = (\n  amount: number,\n  term: number,\n  interest: number\n): { monthlyPayment: number; totalInterest: number; total: number } => {\n  const monthlyPayment = computeMonthlyPayment(amount, term, interest);\n  const total = monthlyPayment * term * 12;\n  const totalInterest = total - amount;\n  return {\n    monthlyPayment: monthlyPayment,\n    totalInterest: totalInterest,\n    total: total,\n  };\n};\n\nexport { computeMonthlyPayment, computeLoanParameters };\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport LoanChart from \"./components/LoanChart\";\nimport LoanForm from \"./components/LoanForm\";\nimport LoanResult from \"./components/LoanResult\";\nimport { computeLoanParameters } from \"./utils/index\";\n\nconst App = (): JSX.Element => {\n  const [amount, setAmount] = useState(0);\n  const [term, setTerm] = useState(0);\n  const [interest, setInterest] = useState(0);\n  const { monthlyPayment, totalInterest, total } = computeLoanParameters(\n    amount,\n    term,\n    interest\n  );\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\">\n        <Row>\n          <Col sm={12} md={4}>\n            <LoanForm\n              onAmount={setAmount}\n              onTerm={setTerm}\n              onInterest={setInterest}\n            />\n          </Col>\n          <Col>\n            <LoanResult\n              monthlyPayment={monthlyPayment}\n              amount={amount}\n              totalInterest={totalInterest}\n              total={total}\n            />\n          </Col>\n          <Col>\n            <LoanChart\n              amount={amount}\n              totalInterest={totalInterest}\n              total={total}\n            />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}